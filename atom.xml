<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Technocracy</title>
  <subtitle>Posts on whatever your host deems relevant.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ets.github.io/"/>
  <updated>2016-09-21T02:50:43.000Z</updated>
  <id>https://ets.github.io/</id>
  
  <author>
    <name>Eric Simmerman</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL Identifying Blocking Transactions</title>
    <link href="https://ets.github.io/2015/08/10/2015-08-10-mysql-identifying-blocking-transactions/"/>
    <id>https://ets.github.io/2015/08/10/2015-08-10-mysql-identifying-blocking-transactions/</id>
    <published>2015-08-10T16:29:15.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">&lt;p&gt;Recording this incredibly helpful query from &lt;a href=&quot;https://stackoverflow.com/questions/22046390/still-seeing-lock-wait-timeouts-when-deleting-from-large-tables-using-primary-ke/22131972#22131972&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bill Karwin’s post to SO&lt;/a&gt;&lt;br&gt;You can find the source query that’s blocking your DELETE by using the INFORMATION_SCHEMA.LOCK_WAITS and INNODB_TRX tables.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SELECT r.trx_id waiting_trx_id,  &amp;#10;       r.trx_mysql_thread_id waiting_thread,&amp;#10;       r.trx_query waiting_query,&amp;#10;       b.trx_id blocking_trx_id,&amp;#10;       b.trx_mysql_thread_id blocking_thread,&amp;#10;       b.trx_query blocking_query&amp;#10;   FROM       information_schema.innodb_lock_waits w&amp;#10;   INNER JOIN information_schema.innodb_trx b  ON  &amp;#10;    b.trx_id = w.blocking_trx_id&amp;#10;  INNER JOIN information_schema.innodb_trx r  ON  &amp;#10;    r.trx_id = w.requesting_trx_id;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;See more information at &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.5/en/innodb-information-schema.html#innodb-information-schema-examples&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://dev.mysql.com/doc/refman/5.5/en/innodb-information-schema.html#innodb-information-schema-examples&lt;/a&gt;, under “Example 14.2 Identifying Blocking Transactions”.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Recording this incredibly helpful query from &lt;a href=&quot;https://stackoverflow.com/questions/22046390/still-seeing-lock-wait-timeouts-when-d
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Fix YAML parsing errors in WebGen</title>
    <link href="https://ets.github.io/2015/01/07/2015-01-07-fix-yaml-parsing-errors-in-webgen/"/>
    <id>https://ets.github.io/2015/01/07/2015-01-07-fix-yaml-parsing-errors-in-webgen/</id>
    <published>2015-01-07T17:20:34.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">&lt;p&gt;After a clean install of Mac OS X Yosemite I’ve had to reinstall much of my development environment. This process was mostly beneficial as I moved to the latest and greatest tooling but several of my static websites leverage the prior major version of &lt;a href=&quot;http://webgen.gettalong.org/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Thomas Leitner’s Webgen&lt;/a&gt; and getting version 0.5.x up and running has been a challenge.  &lt;/p&gt;
&lt;p&gt;After working through several Ruby &amp;amp; Gem issues I ran into a particularly opaque error when executing webgen on a project that previously generated without issue: “(&lt;unknown&gt;): found character that cannot start any token while scanning for the next token”&lt;/unknown&gt;&lt;/p&gt;
&lt;p&gt;This error is usually a sign that your content contains tab characters but I’d already ensured that wasn’t the case.  Instead of diving deep into the workings of the libraries at play I was able to use &lt;a href=&quot;https://groups.google.com/d/msg/webgen-users/wYYWrwljJ1Y/Q8G4SzG_lEcJ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this post from Thomas to resolve the issue&lt;/a&gt; by reverting to the syck TAML implementation instead of its replacement.  Problem solved!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;After a clean install of Mac OS X Yosemite I’ve had to reinstall much of my development environment. This process was mostly beneficial a
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Resolving H2 table lock during JUnitRunner test</title>
    <link href="https://ets.github.io/2014/02/01/2014-02-01-resolving-h2-table-lock-during-junitrunner-test/"/>
    <id>https://ets.github.io/2014/02/01/2014-02-01-resolving-h2-table-lock-during-junitrunner-test/</id>
    <published>2014-02-01T20:36:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">&lt;p&gt;After adding a new test to a project that uses Play Framework 1.2.X and thus leverages H2 for Junit functional testing, I began encountering a table lock during setup() when the framework was attempting to delete the contents of an entity table.&lt;/p&gt;
&lt;p&gt;I initially blamed the lock on bad model design and wasted a significant amount of time tweaking JPA entity relationships and corresponding CRUD operations in an attempt to resolve it. I ultimately resolved the issue after realizing it was in fact caused by a badly designed test.&lt;/p&gt;
&lt;p&gt;I was directly modifying entities within the transaction that wrapped my functional test and then emulating API calls that relied upon the state of those same entities. Long story short, my test was attempting something similar to this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class FunctionalTest { //Runs entire test in the same transaction

    setup(){
        //reset H2 datastore in an distinct transaction
    }

    atest(){ 
        User u = User.findById(1);
        u.address = new Address();
        u.save();

        //test continues
    }

    btest(){
        Request req = GET(&amp;quot;/user/1&amp;quot;);

    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In my contrived example above, after Junit runs atest() and just before running btest() - it will call setup() and attempt to reset the database in a separate transaction. But, atest() claimed a lock for insert on User and in H2 that locks the entire table by default thus setup() will be unable to reset the User table and will fail with a lock timeout.&lt;/p&gt;
&lt;p&gt;To resolve this - you’ll either need to redesign your test to avoid manipulating entities directly in the testcase or run each test in a distinct transaction. &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;After adding a new test to a project that uses Play Framework 1.2.X and thus leverages H2 for Junit functional testing, I began encounter
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Moved again ... this time to github.io</title>
    <link href="https://ets.github.io/2013/11/26/2013-11-26-moved-again-dot-dot-dot-this-time-to-github-dot-io/"/>
    <id>https://ets.github.io/2013/11/26/2013-11-26-moved-again-dot-dot-dot-this-time-to-github-dot-io/</id>
    <published>2013-11-27T00:22:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">&lt;p&gt;Blogger was just too ugly &amp;amp; clumsy so I used a fork of &lt;a href=&quot;https://gist.github.com/juniorz/1564581&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;juniorz’s import.rb&lt;/a&gt; to migrate from blogger to Octopress. Here’s my fork:&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/ets/7662898.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;I found &lt;a href=&quot;https://gist.github.com/MeetDom/1713910&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MeetDom’s gist helpful while installing all the dependencies&lt;/a&gt; required by the import script.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Blogger was just too ugly &amp;amp; clumsy so I used a fork of &lt;a href=&quot;https://gist.github.com/juniorz/1564581&quot; target=&quot;_blank&quot; rel=&quot;externa
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Plesk 11 Upgrade Unable to run Perl scripts in cgi-bin</title>
    <link href="https://ets.github.io/2013/10/29/2013-10-29-plesk-11-upgrade-unable-to-run-perl/"/>
    <id>https://ets.github.io/2013/10/29/2013-10-29-plesk-11-upgrade-unable-to-run-perl/</id>
    <published>2013-10-29T04:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
After an upgrade to Plesk 11, my Perl scripts  located under cgi-bin/ for a specific domain were not executing properly. 
	Requests generated HTTP response code 500 and my error logs showed the unhelpful message &quot;Premature end of script headers&quot;
	I verified all permissions and even disabled / re-enabled cgi-bin support through Plesk which installs a test script under cgi-bin/test/test.cgi
	Even the test script failed to run. It also generated the message &quot;Premature end of script headers: test.cgi&quot;
	I eventually resolved the issue with two changes:&lt;br&gt;&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;The domain&#39;s root folder in /var/www/vhosts was not owned by the domain user. So I fixed that with a chown command.&lt;/li&gt;
&lt;li&gt;Within the Plesk control panel, I had to disable &quot;Perl&quot; support and enable &quot;CGI&quot; support to get my perl scripts with the &quot;.pl&quot; extension to run under cgi-bin&lt;/li&gt;
&lt;/ol&gt;

</content>
    
    <summary type="html">
    
      
After an upgrade to Plesk 11, my Perl scripts  located under cgi-bin/ for a specific domain were not executing properly. 
	Requests generat
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Using iStat 2.x on Mountain Lion</title>
    <link href="https://ets.github.io/2013/04/29/2013-04-29-using-istat-2x-on-mountain-lion/"/>
    <id>https://ets.github.io/2013/04/29/2013-04-29-using-istat-2x-on-mountain-lion/</id>
    <published>2013-04-29T04:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
&lt;div class=&quot;post&quot;&gt;
Shawn Hooton wrote a piece on &lt;a href=&quot;http://codingogre.wordpress.com/2011/09/12/fix-istat-menus-version-2-to-work-with-os-x-lion/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;how to use iStat 2.x on Mountain Lion&lt;/a&gt; that I&#39;ve used several times at this point. &lt;a href=&quot;http://codingogre.wordpress.com/2011/09/12/fix-istat-menus-version-2-to-work-with-os-x-lion/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linking to it here &lt;/a&gt;for posterity.&lt;/div&gt;
</content>
    
    <summary type="html">
    
      
&lt;div class=&quot;post&quot;&gt;
Shawn Hooton wrote a piece on &lt;a href=&quot;http://codingogre.wordpress.com/2011/09/12/fix-istat-menus-version-2-to-work-with
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Moved to Blogger</title>
    <link href="https://ets.github.io/2013/03/07/2013-03-07-moved-to-blogger/"/>
    <id>https://ets.github.io/2013/03/07/2013-03-07-moved-to-blogger/</id>
    <published>2013-03-07T05:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
&lt;div class=&quot;post&quot;&gt;
I started this &lt;a href=&quot;http://www.jroller.com/agileanswers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Agile Answers blog on jroller back in 2006&lt;/a&gt; and I lost some of the older content in my move to Posterous. Sadly Twitter is killing Posterous so I&#39;ve had to move again...this time to Google&#39;s Blogger. Alas - I&#39;ve lost all the Posterous comments and a lot of formatting in the process. As if&amp;nbsp;&lt;a href=&quot;https://twitter.com/theSeanCook&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The Sean Cook&lt;/a&gt;&amp;nbsp;working there weren&#39;t reason enough, I now have one more reason to hate Twitter.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;
</content>
    
    <summary type="html">
    
      
&lt;div class=&quot;post&quot;&gt;
I started this &lt;a href=&quot;http://www.jroller.com/agileanswers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Agile Answers blog on jroll
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Compressing MySQL client-server communication with Play Framework</title>
    <link href="https://ets.github.io/2012/12/19/2012-12-19-compressing-mysql-client-server/"/>
    <id>https://ets.github.io/2012/12/19/2012-12-19-compressing-mysql-client-server/</id>
    <published>2012-12-19T05:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;a href=&quot;http://foldergrid.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FolderGrid&lt;/a&gt; provides a RESTful api that often services requests where over 90% of the entire response time is spent pulling data from a MySQL instance. I was recently working to reduce overall response time for some long running transactions in that bucket.&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;After optimizing my queries and my database caching - I looked at network transfer time from the dedicated MySQL server to the mysql client on the application server. &amp;nbsp;Simply enabling MySQL zlib compression resulted in a 3x performance boost for many of the larger resultsets.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;To configure your Play Framework connection pool to enable MySQL client-server zlib compression, you&#39;ll need to use the explicitly defined &quot;db.url&quot; instead of the shortcut &quot;db&quot; configuration key. Your key should look something like this:&lt;/p&gt;&lt;p&gt;db.url=jdbc:mysql://remotehost/dbname?useUnicode=yes&amp;amp;characterEncoding=UTF-8&amp;amp;connectionCollation=utf8_general_ci&amp;amp;useCompression=true&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
</content>
    
    <summary type="html">
    
      
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;a href=&quot;http://foldergrid.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FolderGrid&lt;/a&gt; provides a RESTful api th
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>When not to front your application with nginx HttpProxyModule</title>
    <link href="https://ets.github.io/2012/11/19/2012-11-19-when-not-to-front-your-application-with/"/>
    <id>https://ets.github.io/2012/11/19/2012-11-19-when-not-to-front-your-application-with/</id>
    <published>2012-11-19T05:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;Throwing nginx (or Apache or lighthttpd) in front of other application stacks is so common that we often don&#39;t think twice about the possible costs. This bit me over the weekend when I casually threw up nginx for SSL termination and configured HttpProxyModule to proxy to my Play Framework driven application.&lt;/p&gt;&lt;p&gt;I failed to heed the first section in the &lt;a href=&quot;http://wiki.nginx.org/HttpProxyModule&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HttpProxyModule&lt;/a&gt; docs. See that note about how &quot;&lt;strong&gt;the entire client request will be buffered in nginx before being passed on to the backend proxied servers&lt;/strong&gt;&quot; ?&lt;/p&gt;&lt;p&gt;That&#39;s one note you are going to care about when you&#39;re handling large requests and can&#39;t figure out why your application is so slow to respond to them.&lt;/p&gt;&lt;p&gt;RTM&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
</content>
    
    <summary type="html">
    
      
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;Throwing nginx (or Apache or lighthttpd) in front of other application stacks is so common that we often don&#39;t think 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Supporting multiple file upload runtimes with pupload inside ExtJS 4</title>
    <link href="https://ets.github.io/2012/08/07/2012-08-07-supporting-multiple-file-upload/"/>
    <id>https://ets.github.io/2012/08/07/2012-08-07-supporting-multiple-file-upload/</id>
    <published>2012-08-07T04:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;The reference client I built for &lt;a href=&quot;http://foldergrid.com/api/index.html&quot; title=&quot;FolderGrid API&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FolderGrid&#39;s API &lt;/a&gt;is a zero footprint web client created using &lt;a href=&quot;http://www.sencha.com/products/extjs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ExtJS 4&lt;/a&gt;. I wanted to support drag &amp;amp; drop file uploads for advanced browsers but degrade nicely all the way back to IE6 for those poor lost souls stuck with tech from the last decade. So I integrated &lt;a href=&quot;http://www.plupload.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;plupload&lt;/a&gt; and bound the two together with some jquery glue.&lt;/p&gt;&lt;p&gt;The results are working well in production and &lt;a href=&quot;https://bitbucket.org/ets/foldergrid-client-extjs/overview&quot; title=&quot;FolderGrid Web Client&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;the client itself is open &amp;amp; licensed under GPL v3&lt;/a&gt; per the terms of ExtJS 4. So if you are interested in copying &amp;amp; extending - have at it.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
</content>
    
    <summary type="html">
    
      
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;The reference client I built for &lt;a href=&quot;http://foldergrid.com/api/index.html&quot; title=&quot;FolderGrid API&quot; target=&quot;_blank
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Automatically find trailing commas in your javascript project</title>
    <link href="https://ets.github.io/2012/08/05/2012-08-05-automatically-find-trailing-commas-in/"/>
    <id>https://ets.github.io/2012/08/05/2012-08-05-automatically-find-trailing-commas-in/</id>
    <published>2012-08-05T04:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;These are simply updated instructions based upon &lt;a href=&quot;http://www.amaxus.com/cms-blog/automatically-finding-javascript-errors-ie7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;the original Amaxus writeup here&lt;/a&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Install Rhino &amp;nbsp;(I used &quot;port install rhino&quot;)&lt;/li&gt;&lt;li&gt;Grab the &lt;a href=&quot;https://raw.github.com/mikewest/jslint-utils/master/lib/rhinoed_jslint.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Rhinoized JSLint script here&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Create a script named checkForJsErrors.sh with the following two lines:&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;echo $1&lt;br&gt;rhino&amp;nbsp;rhinoed_jslint.js $1 | fgrep -e &#39;Unexpected&#39; --color=always&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Create an alias in your bashrc&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;alias checkjs=&#39;find . -name &#39;&#39;&#39;*.js&#39;&#39;&#39; -exec ~/bin/checkForJsErrors.sh {} ;&#39;&lt;/p&gt;&lt;p&gt;&lt;div&gt;Now when you execuate that alias in your project&#39;s root directory - all of your .js files will be scanned for trailing commas.&lt;/div&gt;&lt;/p&gt;&lt;p&gt;&lt;div&gt;You&#39;re welcome.&lt;/div&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
</content>
    
    <summary type="html">
    
      
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;These are simply updated instructions based upon &lt;a href=&quot;http://www.amaxus.com/cms-blog/automatically-finding-javasc
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>orphanRemoval issues in Play Framework &#39;collection owner not associated with session&#39;</title>
    <link href="https://ets.github.io/2012/08/03/2012-08-03-orphanremoval-issues-in-play-framework/"/>
    <id>https://ets.github.io/2012/08/03/2012-08-03-orphanremoval-issues-in-play-framework/</id>
    <published>2012-08-03T04:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;I was just burned by an issue in Play Framework&#39;s JPA support of orphanRemovals. The issue manifests as a &quot;collection owner not associated with session&quot; JPAException within Play Framework 1.2.x &amp;nbsp;- it was supposed to be &lt;a href=&quot;https://play.lighthouseapp.com/projects/57987/tickets/1503-nested-onetomany-relationships-with-orphanremoval-fails-to-commit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;addressed in 1.2.5 with this patch,&lt;/a&gt; but I&#39;m running 1.2.5 and am still running into it.&lt;/p&gt;&lt;p&gt;I didn&#39;t take the time to diagnose or file a report - for now I&#39;m punting by restricting the use of &#39;orphanRemoval&#39;.&lt;/p&gt;&lt;/div&gt;
</content>
    
    <summary type="html">
    
      
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;I was just burned by an issue in Play Framework&#39;s JPA support of orphanRemovals. The issue manifests as a &quot;collection
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Cautionary tale regarding cloud security</title>
    <link href="https://ets.github.io/2012/07/25/2012-07-25-cautionary-tale-regarding-cloud-security/"/>
    <id>https://ets.github.io/2012/07/25/2012-07-25-cautionary-tale-regarding-cloud-security/</id>
    <published>2012-07-25T04:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;My work with &lt;a href=&quot;http://foldergrid.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FolderGrid&lt;/a&gt; has included quite a few very interesting technical problems that have resulted in material for this blog.&amp;nbsp;I just&amp;nbsp;&lt;a href=&quot;http://blog.foldergrid.com/2012/07/why-we-stopped&amp;amp;hellip;cloud-services/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;posted an interesting read for anyone using cloud services&lt;/a&gt;&amp;nbsp;to store or transport sensitive data.&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
</content>
    
    <summary type="html">
    
      
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;My work with &lt;a href=&quot;http://foldergrid.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FolderGrid&lt;/a&gt; has included quite a few v
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Compiling Maven project with JNLP API 1.6+ on Mac OS X</title>
    <link href="https://ets.github.io/2012/07/11/2012-07-11-compiling-maven-project-with-jnlp-api/"/>
    <id>https://ets.github.io/2012/07/11/2012-07-11-compiling-maven-project-with-jnlp-api/</id>
    <published>2012-07-11T04:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;To compile a project using JNLP API with Maven you&#39;ll need javaws.jar in the compile-time classpath. You&#39;ll find the jar under the lib folder of your JDK installation. Mine was here:&lt;/p&gt;&lt;p&gt;/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
</content>
    
    <summary type="html">
    
      
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;To compile a project using JNLP API with Maven you&#39;ll need javaws.jar in the compile-time classpath. You&#39;ll find the 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Resolving Spring Security ACL deadlock in MySQL</title>
    <link href="https://ets.github.io/2012/06/30/2012-06-30-resolving-spring-security-acl-deadlock/"/>
    <id>https://ets.github.io/2012/06/30/2012-06-30-resolving-spring-security-acl-deadlock/</id>
    <published>2012-06-30T04:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;The default JDBCTemplate based implementation of Spring Security ACLs removes and recreates the entire ACL for each update. That requires both deletes and inserts into the same table within the same JPA transaction and is a recipe for deadlock when using the default MySQL transaction isolation level of REPEATABLE_READ.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Setting your transaction isolation level to READ_COMMITTED is a viable alternative to MySQL&#39;s default but be certain you are not using the default bin-log format of Statement as this is not compatible with READ_COMMITTED isolation. You&#39;ll need to use Mixed or Row level bin-log format instead.&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
</content>
    
    <summary type="html">
    
      
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;The default JDBCTemplate based implementation of Spring Security ACLs removes and recreates the entire ACL for each u
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Great explanation of the &#39;The Infamous Loop Problem&#39; in javascript</title>
    <link href="https://ets.github.io/2012/05/21/2012-05-21-great-explanation-of-infamous-loop/"/>
    <id>https://ets.github.io/2012/05/21/2012-05-21-great-explanation-of-infamous-loop/</id>
    <published>2012-05-21T04:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;Thanks Robert Nyman for your &lt;a href=&quot;http://robertnyman.com/2008/10/09/explaining-javascript-scope-and-closures/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;apparently timeless explanation of the Infamous Loop Problem&lt;/a&gt;&amp;nbsp;that caught me when declaring my callbacks to an asynchronous request tonight.&lt;/p&gt;&lt;/div&gt;
</content>
    
    <summary type="html">
    
      
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;Thanks Robert Nyman for your &lt;a href=&quot;http://robertnyman.com/2008/10/09/explaining-javascript-scope-and-closures/&quot; ta
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>By popular demand ... my git-aware bash prompt</title>
    <link href="https://ets.github.io/2012/02/16/2012-02-16-by-popular-demand-my-git-aware-bash/"/>
    <id>https://ets.github.io/2012/02/16/2012-02-16-by-popular-demand-my-git-aware-bash/</id>
    <published>2012-02-16T05:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
&lt;div class=&quot;post&quot;&gt;
Pirated from a long forgotten place...apologies to the respective copyright holders. Just paste this in your .bashrc for git-aware goodness:&lt;br&gt;&lt;div class=&quot;gistLoad&quot; data-id=&quot;1850712&quot; id=&quot;gist-1850712&quot;&gt;Loading ....&lt;/div&gt;&lt;script src=&quot;https://raw.github.com/moski/gist-Blogger/master/public/gistLoader.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;
</content>
    
    <summary type="html">
    
      
&lt;div class=&quot;post&quot;&gt;
Pirated from a long forgotten place...apologies to the respective copyright holders. Just paste this in your .bashrc for
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Configure my Amazon EC2 instances to only accept traffic from the Elastic Load Balancer</title>
    <link href="https://ets.github.io/2012/01/24/2012-01-24-configure-my-amazon-ec2-instances-to/"/>
    <id>https://ets.github.io/2012/01/24/2012-01-24-configure-my-amazon-ec2-instances-to/</id>
    <published>2012-01-24T05:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;The AWS&amp;nbsp;Elastic Load Balancing FAQ has this very relevant question:&lt;/p&gt;&lt;blockquote class=&quot;posterous_short_quote&quot;&gt;&lt;p&gt;Can I configure my Amazon EC2 instances to only accept traffic from the Elastic Load Balancer?&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;followed by an ever so helpful response:&lt;/p&gt;&lt;blockquote class=&quot;posterous_short_quote&quot;&gt;&lt;p&gt;Yes.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Seriously - no links, no reference to documentation, nothing. With such a tremendous investment in infrastructure you&#39;d think Amazon might spend a day or two on documentation...alas.&lt;/p&gt;&lt;p&gt;Insult to injury it&#39;s also not at all obvious what you need to do to configure your Security Group to support this very commonly desired configuration. I&#39;m here to help.&lt;/p&gt;&lt;p&gt;Use the not-so-documented &#39;amazon-elb/amazon-elb-sg&#39; Security Group name as the Inbound Source for your Security Group rule to filter on traffic coming from your AWS ELB. Enjoy!&lt;/p&gt;&lt;/div&gt;
</content>
    
    <summary type="html">
    
      
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;The AWS&amp;nbsp;Elastic Load Balancing FAQ has this very relevant question:&lt;/p&gt;&lt;blockquote class=&quot;posterous_short_quote&quot;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Resolving git-gc error on Mac</title>
    <link href="https://ets.github.io/2012/01/19/2012-01-19-resolving-git-gc-error-on-mac/"/>
    <id>https://ets.github.io/2012/01/19/2012-01-19-resolving-git-gc-error-on-mac/</id>
    <published>2012-01-19T05:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;During today&#39;s maintenance run of git-gc on our Mac hosted repo I encountered screenfulls of nasty fatal error messages - but the last two were a clue to the root cause:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;fatal: Unable to create temporary file: Too many open files&lt;br&gt;error: failed to run repack&lt;/p&gt;&lt;p&gt;This &lt;a href=&quot;http://git.661346.n2.nabble.com/Intriguing-error-with-Git-1-6-3-1-Too-many-open-files-td7174697.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;related post helped me&lt;/a&gt; find a quick cure which involved simply bumping the ulimit up temporarily.&lt;/p&gt;&lt;p&gt;# ulimit -n 10024&lt;br&gt;&amp;gt; git gc&lt;/p&gt;&lt;p&gt;Easy fix for a potentially bad day.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;
</content>
    
    <summary type="html">
    
      
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;During today&#39;s maintenance run of git-gc on our Mac hosted repo I encountered screenfulls of nasty fatal error messag
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Play framework on AWS</title>
    <link href="https://ets.github.io/2012/01/08/2012-01-08-play-framework-on-aws/"/>
    <id>https://ets.github.io/2012/01/08/2012-01-08-play-framework-on-aws/</id>
    <published>2012-01-08T05:00:00.000Z</published>
    <updated>2016-09-21T02:50:43.000Z</updated>
    
    <content type="html">
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;Steps I took to get a Play framework app up and running on a micro AWS instance running Ubuntu 11.10&lt;/p&gt;&lt;ol&gt;&lt;li&gt;sudo add-apt-repository &quot;deb &lt;a href=&quot;http://archive.canonical.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://archive.canonical.com/&lt;/a&gt; lucid partner&quot;&lt;/li&gt;&lt;li&gt;sudo apt-get update&lt;/li&gt;&lt;li&gt;sudo apt-get install sun-java6-jdk unzip&lt;/li&gt;&lt;li&gt;wget &lt;a href=&quot;http://download.playframework.org/releases/play-1.2.4.zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://download.playframework.org/releases/play-1.2.4.zip&lt;/a&gt;&lt;/li&gt;&lt;li&gt;sudo unzip play-1.2.4.zip -d /usr/local/share/&lt;/li&gt;&lt;li&gt;install&amp;nbsp;&lt;a href=&quot;https://gist.github.com/1289753&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dominik Dorn&#39;s startup script&lt;/a&gt;&lt;ol&gt;&lt;li&gt;wget &lt;a href=&quot;https://raw.github.com/gist/1290012/a31b1d079705ea7ccf6d1fdc866027b674e62841/playframework&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://raw.github.com/gist/1290012/a31b1d079705ea7ccf6d1fdc866027b674e62841/...&lt;/a&gt;&lt;/li&gt;&lt;li&gt;sudo mv playframework /etc/init/&lt;/li&gt;&lt;li&gt;update the script with proper paths&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;useradd username -g www-data -m -d /home/username&amp;nbsp;-s /bin/bash&lt;/li&gt;&lt;li&gt;install your app&lt;/li&gt;&lt;li&gt;initctl start playframework&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;
</content>
    
    <summary type="html">
    
      
&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;Steps I took to get a Play framework app up and running on a micro AWS instance running Ubuntu 11.10&lt;/p&gt;&lt;ol&gt;&lt;li&gt;sudo 
    
    </summary>
    
    
  </entry>
  
</feed>
